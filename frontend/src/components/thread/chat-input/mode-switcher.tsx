import React, { useState } from 'react';

// Inline SVG for modeA (from public/86/modeA.svg)
const ModeAIcon = () => (
  <svg width="26" height="26" viewBox="0 0 37 37" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M18.5013 20.0214C19.3412 20.0214 20.0221 19.3405 20.0221 18.5006C20.0221 17.6606 19.3412 16.9797 18.5013 16.9797C17.6614 16.9797 16.9805 17.6606 16.9805 18.5006C16.9805 19.3405 17.6614 20.0214 18.5013 20.0214Z" stroke="white" strokeWidth="2.28125" strokeLinecap="round" strokeLinejoin="round"/>
    <path d="M27.8525 3.68262C29.3564 3.72996 30.7496 4.18737 31.7803 5.2207L31.9678 5.41797C32.8721 6.42628 33.2778 7.7406 33.3223 9.15234C33.3693 10.6498 33.016 12.3233 32.3623 14.0508C31.8761 15.3355 31.2084 16.6765 30.3857 18.0391C29.9379 17.9806 29.4813 17.9473 29.0176 17.9473C28.3633 17.9473 27.7236 18.0102 27.1025 18.125C26.0366 16.6391 24.7739 15.1352 23.3271 13.6816L22.6934 13.0645C21.3144 11.7527 19.9005 10.6038 18.5059 9.63281C16.8962 10.7535 15.2607 12.1105 13.6826 13.6816C12.1135 15.2582 10.7573 16.8921 9.6377 18.5C10.7573 20.1081 12.1133 21.7417 13.6826 23.3184L14.3164 23.9355C15.695 25.2469 17.1077 26.3963 18.502 27.3672C18.5361 27.3434 18.5693 27.3179 18.6035 27.2939C18.5638 27.6647 18.543 28.0415 18.543 28.4229C18.543 29.0357 18.5982 29.6357 18.6992 30.2197C18.6345 30.1798 18.5687 30.1412 18.5039 30.1006C16.9841 31.0542 15.4844 31.8167 14.0557 32.3574C12.3282 33.0111 10.6547 33.3643 9.15723 33.3174C7.6514 33.27 6.25669 32.8115 5.22559 31.7754V31.7744C4.19252 30.7437 3.73478 29.3514 3.6875 27.8477C3.64054 26.3501 3.99377 24.6767 4.64746 22.9492C5.1882 21.5204 5.94957 20.0199 6.90332 18.5C5.94958 16.9801 5.18817 15.4796 4.64746 14.0508C3.99374 12.3232 3.6405 10.6499 3.6875 9.15234C3.73488 7.6466 4.19344 6.25176 5.22949 5.2207C6.26018 4.18754 7.65344 3.72991 9.15723 3.68262C10.6547 3.63568 12.3282 3.9889 14.0557 4.64258C15.4844 5.18326 16.9841 5.94577 18.5039 6.89941C20.0241 5.94548 21.5251 5.18337 22.9541 4.64258C24.6815 3.98895 26.3551 3.63563 27.8525 3.68262ZM8.31641 20.5713C7.68016 21.6716 7.16514 22.7424 6.78125 23.7568C6.19567 25.3043 5.93316 26.6692 5.96777 27.7754C6.0001 28.8047 6.28437 29.552 6.74414 30.0635L6.83887 30.1621L6.84277 30.166C7.35519 30.6809 8.13169 31.0026 9.22949 31.0371C10.3356 31.0717 11.7006 30.8092 13.248 30.2236C14.2621 29.8399 15.3318 29.3235 16.4316 28.6875C14.9569 27.6001 13.487 26.3431 12.0732 24.9355L12.0693 24.9316C10.6613 23.5173 9.4041 22.0466 8.31641 20.5713ZM9.22949 5.96289C8.13191 5.99737 7.35519 6.31925 6.84277 6.83398L6.83887 6.83789C6.32402 7.35028 6.00229 8.12694 5.96777 9.22461C5.93313 10.3308 6.19565 11.6956 6.78125 13.2432C7.16503 14.2573 7.68037 15.3277 8.31641 16.4277C9.40391 14.9528 10.6616 13.4823 12.0693 12.0684L12.0732 12.0645C13.487 10.657 14.957 9.39986 16.4316 8.3125C15.3317 7.67658 14.2621 7.16012 13.248 6.77637C11.7006 6.19082 10.3357 5.92831 9.22949 5.96289ZM27.7803 5.96289C26.6741 5.92826 25.3091 6.19086 23.7617 6.77637C22.7474 7.16023 21.6764 7.67627 20.5762 8.3125C22.0512 9.40009 23.5224 10.6566 24.9365 12.0645L24.9404 12.0684C26.348 13.4822 27.604 14.953 28.6914 16.4277C29.3276 15.3276 29.8447 14.2575 30.2285 13.2432C30.814 11.6957 31.0766 10.3308 31.042 9.22461C31.0075 8.12689 30.6858 7.35028 30.1709 6.83789L30.167 6.83398C29.6546 6.31911 28.8779 5.99742 27.7803 5.96289Z" fill="white"/>
    <path d="M33.2923 35.4446L28.2977 22.0401L28.1595 21.6255H29.8375L35.0888 35.2867V35.4446H33.2923ZM22.9082 35.4446V35.2867L28.1595 21.6255H29.8375L29.6993 22.0401L24.7047 35.4446H22.9082ZM24.9416 31.8911L25.5338 30.2526H32.6605L33.2528 31.8911H24.9416Z" fill="white"/>
  </svg>
);

// Atom SVG
const AtomIcon = () => (
  <svg  xmlns="http://www.w3.org/2000/svg"  width="26"  height="26"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  strokeWidth="2"  strokeLinecap="round"  strokeLinejoin="round"  className="icon icon-tabler icons-tabler-outline icon-tabler-atom"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 12v.01" /><path d="M19.071 4.929c-1.562 -1.562 -6 .337 -9.9 4.243c-3.905 3.905 -5.804 8.337 -4.242 9.9c1.562 1.561 6 -.338 9.9 -4.244c3.905 -3.905 5.804 -8.337 4.242 -9.9" /><path d="M4.929 4.929c-1.562 1.562 .337 6 4.243 9.9c3.905 3.905 8.337 5.804 9.9 4.242c1.561 -1.562 -.338 -6 -4.244 -9.9c-3.905 -3.905 -8.337 -5.804 -9.9 -4.242" /></svg>
);

// Message Square SVG
const MessageSquareIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-message-square-icon lucide-message-square"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"/></svg>
);

const MODES = [
  { icon: <AtomIcon />, key: 'modeB' },
  { icon: <ModeAIcon />, key: 'modeA' },
  { icon: <MessageSquareIcon />, key: 'modeC' },
];

export default function ModeSwitcher({ activeMode, onModeChange }) {
  const [selected, setSelected] = useState(activeMode || 'modeB');

  const handleClick = (key) => {
    setSelected(key);
    if (onModeChange) onModeChange(key);
  };

  return (
    <div className="flex flex-row  items-center rounded-full bg-[#F7F7F726] w-fit p-1">
      {MODES.map((mode, idx) => (
        <button
          key={mode.key}
          onClick={() => handleClick(mode.key)}
          className={
            selected === mode.key
              ? 'w-9 h-9 rounded-full flex items-center justify-center bg-gradient-to-tr from-[#F03487] to-[#FCBB42] shadow-lg transition-all duration-150'
              : 'w-9 h-9 rounded-full flex items-center justify-center bg-transparent transition-all duration-150'
          } 
        >
          <span className="w-[18px] h-[18px] flex items-center justify-center">
            {React.cloneElement(mode.icon, { width: 18, height: 18 })}
          </span>
        </button>
      ))}
    </div>
  );
}
